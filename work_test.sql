
-- 1

USE NEWBIE;
GO

CREATE TABLE dbo.SHEDULERS (		--	DROP TABLE NEWBIE.dbo.SHEDULERS;
FIO NVARCHAR (65),
SHEDULE NVARCHAR (65),
DATE_BEGIN DATE,
DATE_END DATE,
UNIQUE (FIO, DATE_BEGIN),
CHECK (DATE_BEGIN <= DATE_END)
);

/*
SELECT *
FROM NEWBIE.dbo.SHEDULERS

INSERT INTO NEWBIE.dbo.SHEDULERS	--	DELETE FROM NEWBIE.dbo.SHEDULERS;
VALUES ('Хаитов Б.Н.', 'ДВ', '2020-01-01', '2020-01-15')
*/


BULK INSERT NEWBIE.dbo.SHEDULERS 
FROM 'C:\Users\haitov_bn\Documents\shedulers.csv'
WITH (FIRSTROW = 2, CODEPAGE = 'ACP')


-- 2
CREATE TABLE dbo.WORK_DAYS (		--	DROP TABLE NEWBIE.dbo.WORK_DAYS;
FIO NVARCHAR (65),
DATE_BEGIN DATETIME,
DATE_END DATETIME
);

GO

-- Создание процедуры
ALTER PROCEDURE dbo.PRC_SHEDULERS @DATE_BEGIN DATE, @DATE_END DATE
AS
BEGIN

--DECLARE @DATE_BEGIN DATE;
--DECLARE @DATE_END DATE;

--SET @DATE_BEGIN = '2019-01-29'
--SET @DATE_END = '2019-03-15'


-- Справочник дней
IF OBJECT_ID(N'TEMPDB..#DAYS',N'U') IS NOT NULL DROP TABLE TEMPDB..#DAYS;	--	SELECT * FROM #DAYS
SELECT DAY_ID
INTO #DAYS
FROM SOURCES.dbo.V_DAYS
WHERE DAY_ID BETWEEN @DATE_BEGIN AND @DATE_END;

DELETE FROM NEWBIE.dbo.WORK_DAYS;

INSERT INTO NEWBIE.dbo.WORK_DAYS
SELECT s.FIO
	-- , s.SHEDULE
	-- , s.DATE_BEGIN
	-- , s.DATE_END
	-- , s.DAY_ID
	-- , s.RN
	 , CASE WHEN s.SUB = 'д' THEN DATEADD (hh, +8, CAST (s.DAY_ID AS datetime))
			WHEN s.SUB = 'н' THEN DATEADD (hh, +20, CAST (s.DAY_ID AS datetime))
			WHEN s.SUB = 'с' THEN DATEADD (hh, +8, CAST (s.DAY_ID AS datetime)) END AS DATE_BEGIN

	 , CASE WHEN s.SUB = 'д' THEN DATEADD (hh, +20, CAST (s.DAY_ID AS datetime))
			WHEN s.SUB = 'н' THEN DATEADD (hh, +32, CAST (s.DAY_ID AS datetime))
			WHEN s.SUB = 'с' THEN DATEADD (hh, +32, CAST (s.DAY_ID AS datetime)) END AS DATE_END
	-- , s.SUB
FROM (
		SELECT s.FIO
			 , s.SHEDULE
			 , s.DATE_BEGIN
			 , s.DATE_END
			 , s.DAY_ID
			 , s.RN
			 --, SUBSTRING (s.SHEDULE, s.RN, 1) AS SUB
			 , CASE WHEN s.RN > LEN (s.SHEDULE) AND (s.RN % LEN (s.SHEDULE)) <> 0 
						THEN SUBSTRING (s.SHEDULE, s.RN - ROUND (s.RN / LEN (s.SHEDULE), 0, 1) * LEN (s.SHEDULE), 1) 
					WHEN s.RN > LEN (s.SHEDULE) AND (s.RN % LEN (s.SHEDULE)) = 0
						THEN SUBSTRING (s.SHEDULE, LEN (s.SHEDULE), 1)
						--THEN SUBSTRING (s.SHEDULE, s.RN / ROUND (s.RN / LEN (s.SHEDULE), 0, 1), 1)
					ELSE SUBSTRING (s.SHEDULE, s.RN, 1) END AS SUB
		FROM (
				SELECT s.FIO
					 , s.SHEDULE
					 , s.DATE_BEGIN
					 , s.DATE_END
					 , d.DAY_ID
					 , ROW_NUMBER () OVER (PARTITION BY s.FIO, s.SHEDULE, s.DATE_BEGIN ORDER BY d.DAY_ID) AS RN
				FROM NEWBIE.dbo.SHEDULERS AS s
				CROSS JOIN #DAYS AS d
				WHERE d.DAY_ID BETWEEN s.DATE_BEGIN AND s.DATE_END
				--ORDER BY FIO, DATE_BEGIN
			) AS s
	) AS s
WHERE 1=1
	AND s.SUB <> 'в';

END;

GO


-- Вызов процедуры
EXEC NEWBIE.dbo.PRC_SHEDULERS '2019-01-03', '2019-02-02';


SELECT *
FROM NEWBIE.dbo.WORK_DAYS

/*
SELECT DATEDIFF (d, '2019-01-01', '2019-01-05')

SELECT TOP 1000000 ROW_NUMBER() OVER(ORDER BY t1.number) as number
from master..spt_values t1 
cross join master..spt_values t2
*/



-- 4

-- Кол-во отработанных дней
SELECT s.FIO
	 , COUNT (s.DATE_BEGIN) AS WORK_DAYS
FROM NEWBIE.dbo.WORK_DAYS AS s
GROUP BY s.FIO;

-- Список сотрудников у которых было больше 10 рабочих дней за январь 2019 года
SELECT s.FIO
FROM NEWBIE.dbo.WORK_DAYS AS s
WHERE 1=1
	AND CAST (s.DATE_BEGIN AS DATE) BETWEEN '2019-01-01' AND '2019-01-31'
GROUP BY s.FIO
HAVING COUNT (s.DATE_BEGIN) > 10;

-- Сотрудники, отработавшие 14,15,16 января 2019 года
SELECT DISTINCT s.FIO
FROM NEWBIE.dbo.WORK_DAYS AS s
WHERE 1=1
	AND CAST (s.DATE_BEGIN AS DATE) IN ('2019-01-14', '2019-01-15', '2019-01-16');

